import discord
from discord.ext import commands
import json
import os
from pypresence import Presence
os.system("cls")

with open("config.json", "r") as f:
    data = json.load(f)
    for p in data["config"]:
        bot = commands.Bot(command_prefix = p["prefix"].replace("(", "").replace(")", ""))
    try:
        intents = discord.Intents.default()
        intents.members = True
    except: 
        print("\033[1;31;40m[ERROR]\033[0;37;40m Bot may not work correctly, please enable server members intent in 'Bot' category in your application settings on Developer Portal")
    bot.remove_command('help')

try:
    rpc_client_id = "824234721126776863"
    RPC = Presence(rpc_client_id)
    RPC.connect()
    RPC.update(state=f"Currently hosting bot using EZbot!", details="EZbot is python-based Discord bot creator, all you need to do is to host it. You can customize your bot in many aspects.", buttons=[{"label": "EZbot GitHub", "url": "https://github.com/statboi/EZbot"}])
except: print("\033[1;31;40m[ERROR]\033[0;37;40m Cannot connect to Discord rich presence.")

@bot.event
async def on_connect():
    print(f"\033[1;33;40m[Connected]\033[0;37;40m {bot.user.name} has succesfully connected to Discord servers, loading...")
    with open("config.json") as f:
        data = json.load(f)
        for p in data["botSettings"]:
            await bot.change_presence(status=discord.Status.online, activity=discord.Game(p["botStatus"].replace("[botName]", bot.user.name)))

@bot.event
async def on_ready():
    for filename in os.listdir("cogs"):
        if filename.endswith(".py"):
            bot.load_extension(f"cogs.{filename[:-3]}")
    print("\033[1;32;40m[Ready]\033[0;37;40m Your bot is ready! Thank you for using EZbot, also check our Discord statistics bot - statboi: tiny.one/statboi!")

@bot.event
async def on_disconnect():
    print("\033[1;31;40m[Disconnected]\033[0;37;40m Error - Disconnected from Discord servers, please check your network or Discord servers status.")

@bot.event
async def on_message(message):
    with open("config.json", "r") as f:
        data = json.load(f)
        for p in data['config']:
            if message.content.startswith(f"{p['prefix'].replace('(', '').replace(')', '')}help"):
                embed=discord.Embed(title="Help menu", description=f"{bot.user.name} by {p['authorName']} powered by [EZbot](https://github.com/statboi/EZbot)", color=0x24bdff)
                embed.add_field(name="Moderation commands", value="kick [member] {reason}\nban [member] {reason}\nclear [amount]\nslowmode [seconds]\nswitchcommand [command] (Turns on/of specific command)", inline=False)
                embed.add_field(name="Utility commands", value="user [member]", inline=False)
                await message.channel.send(embed=embed)
    await bot.process_commands(message)

@bot.command()
@commands.has_permissions(manage_guild=True)
async def switchcommand(ctx, command):
    msgOn = f"Successfully turned {command} on!"
    msgOff = f"Successfully turned {command} off!"
    with open(r"cogs\features.json", "r") as f:
        data = json.load(f)
        if command=="kick":
            if data[command]=="1":
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": "0", "ban": data["ban"], "clear": data["clear"], "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOff)
            else:
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": "1", "ban": data["ban"], "clear": data["clear"], "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOn)
        elif command=="ban":
            if data[command]=="1":
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": "0", "clear": data["clear"], "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOff)
            else:
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": "1", "clear": data["clear"], "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOn)
        elif command=="clear":
            if data[command]=="1":
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": "0", "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOff)
            else:
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": "1", "slowmode": data["slowmode"], "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOn)
        elif command=="slowmode":
            if data[command]=="1":
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": data["clear"], "slowmode": "0", "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOff)
            else:
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": data["clear"], "slowmode": "1", "user": data["user"]}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOn)
        elif command=="user":
            if data[command]=="1":
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": data["clear"], "slowmode": data["slowmode"], "user": "0"}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOff)
            else:
                dataOut = {"NOTE:": "PLEASE DO NOT EDIT THIS FILE. Use command '[prefix]switchcommand [command]' to turn off/on specific command", "kick": data["kick"], "ban": data["ban"], "clear": data["clear"], "slowmode": data["slowmode"], "user": "1"}
                fw = open(r"cogs\features.json", "w")
                json.dump(dataOut, fw, indent=4)
                await ctx.send(msgOn)
        else:
            await ctx.send("Command not found.")

with open("config.json", "r") as f:
    data = json.load(f)
    for p in data['config']:
        bot.run(p['token'])
